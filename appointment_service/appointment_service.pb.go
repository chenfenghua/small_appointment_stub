// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: appointment_service/appointment_service.proto

package appointment_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PublishActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId string           `protobuf:"bytes,1,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"` // 用户唯一标识
	OpenId  string           `protobuf:"bytes,2,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`    // 仅作为存储使用
	Info    *AppointmentInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`                      // 预约信息
}

func (x *PublishActivityReq) Reset() {
	*x = PublishActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishActivityReq) ProtoMessage() {}

func (x *PublishActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishActivityReq.ProtoReflect.Descriptor instead.
func (*PublishActivityReq) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{0}
}

func (x *PublishActivityReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *PublishActivityReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *PublishActivityReq) GetInfo() *AppointmentInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type AppointmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtraInfo      []*ExtraInfo               `protobuf:"bytes,1,rep,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"`                // 额外的预约信息
	ActivityAvatar string                     `protobuf:"bytes,2,opt,name=activity_avatar,json=activityAvatar,proto3" json:"activity_avatar,omitempty"` // 活动头像链接
	ActivityNick   string                     `protobuf:"bytes,3,opt,name=activity_nick,json=activityNick,proto3" json:"activity_nick,omitempty"`       // 活动昵称
	Introductions  []*AppointmentIntroduction `protobuf:"bytes,4,rep,name=introductions,proto3" json:"introductions,omitempty"`
	Projects       []*AppointmentProject      `protobuf:"bytes,5,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *AppointmentInfo) Reset() {
	*x = AppointmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentInfo) ProtoMessage() {}

func (x *AppointmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentInfo.ProtoReflect.Descriptor instead.
func (*AppointmentInfo) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{1}
}

func (x *AppointmentInfo) GetExtraInfo() []*ExtraInfo {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

func (x *AppointmentInfo) GetActivityAvatar() string {
	if x != nil {
		return x.ActivityAvatar
	}
	return ""
}

func (x *AppointmentInfo) GetActivityNick() string {
	if x != nil {
		return x.ActivityNick
	}
	return ""
}

func (x *AppointmentInfo) GetIntroductions() []*AppointmentIntroduction {
	if x != nil {
		return x.Introductions
	}
	return nil
}

func (x *AppointmentInfo) GetProjects() []*AppointmentProject {
	if x != nil {
		return x.Projects
	}
	return nil
}

type AppointmentProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                           // 项目名称
	Cover       string                          `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`                                                                                         // 封面链接
	Mode        int32                           `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`                                                                                          // 预约模式：0-未知、1-循环模式、2-固定日期模式
	Infos       map[string]*AppointmentTimeSlot `protobuf:"bytes,4,rep,name=infos,proto3" json:"infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 所有模式都是这种方式，端侧自己决定字符串的解析方式作为传
	Description string                          `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                                                                             // 描述（非必填）
	Status      int32                           `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                                                      // 0-未知、1-可预约、2-不可预约（已结束）、3-临时暂停
	ExtraInfo   string                          `protobuf:"bytes,7,opt,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"`                                                                // 客户自行使用
}

func (x *AppointmentProject) Reset() {
	*x = AppointmentProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentProject) ProtoMessage() {}

func (x *AppointmentProject) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentProject.ProtoReflect.Descriptor instead.
func (*AppointmentProject) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{2}
}

func (x *AppointmentProject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppointmentProject) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AppointmentProject) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *AppointmentProject) GetInfos() map[string]*AppointmentTimeSlot {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *AppointmentProject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppointmentProject) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AppointmentProject) GetExtraInfo() string {
	if x != nil {
		return x.ExtraInfo
	}
	return ""
}

// 预约说明
type AppointmentIntroduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`     // 主要是客户端自行判断使用 0-未知、1-文字、2-大图、3-小图、4-视频
	Value  string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`   // 图片或视频的url或者描述信息（客户端先上传后拿到链接补充）
	Images []string `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"` // 小图url列表
}

func (x *AppointmentIntroduction) Reset() {
	*x = AppointmentIntroduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentIntroduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentIntroduction) ProtoMessage() {}

func (x *AppointmentIntroduction) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentIntroduction.ProtoReflect.Descriptor instead.
func (*AppointmentIntroduction) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{3}
}

func (x *AppointmentIntroduction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AppointmentIntroduction) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AppointmentIntroduction) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type AppointmentTimeSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times []*TimeSlot `protobuf:"bytes,1,rep,name=times,proto3" json:"times,omitempty"` // 时间段列表
}

func (x *AppointmentTimeSlot) Reset() {
	*x = AppointmentTimeSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentTimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentTimeSlot) ProtoMessage() {}

func (x *AppointmentTimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentTimeSlot.ProtoReflect.Descriptor instead.
func (*AppointmentTimeSlot) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{4}
}

func (x *AppointmentTimeSlot) GetTimes() []*TimeSlot {
	if x != nil {
		return x.Times
	}
	return nil
}

// 单独表记录使用数量（第一版先考虑不引入redis）
type TimeSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime  string `protobuf:"bytes,1,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime    string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	MaxNumber  int32  `protobuf:"varint,3,opt,name=max_number,json=maxNumber,proto3" json:"max_number,omitempty"`    // 最大数量-1为无限
	LeftNumber int32  `protobuf:"varint,4,opt,name=left_number,json=leftNumber,proto3" json:"left_number,omitempty"` // 剩余数量
}

func (x *TimeSlot) Reset() {
	*x = TimeSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlot) ProtoMessage() {}

func (x *TimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlot.ProtoReflect.Descriptor instead.
func (*TimeSlot) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{5}
}

func (x *TimeSlot) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *TimeSlot) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TimeSlot) GetMaxNumber() int32 {
	if x != nil {
		return x.MaxNumber
	}
	return 0
}

func (x *TimeSlot) GetLeftNumber() int32 {
	if x != nil {
		return x.LeftNumber
	}
	return 0
}

type ExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName  string `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	FieldValue string `protobuf:"bytes,2,opt,name=field_value,json=fieldValue,proto3" json:"field_value,omitempty"`
	IsMust     bool   `protobuf:"varint,3,opt,name=is_must,json=isMust,proto3" json:"is_must,omitempty"` // 是否必填
}

func (x *ExtraInfo) Reset() {
	*x = ExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraInfo) ProtoMessage() {}

func (x *ExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraInfo.ProtoReflect.Descriptor instead.
func (*ExtraInfo) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{6}
}

func (x *ExtraInfo) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *ExtraInfo) GetFieldValue() string {
	if x != nil {
		return x.FieldValue
	}
	return ""
}

func (x *ExtraInfo) GetIsMust() bool {
	if x != nil {
		return x.IsMust
	}
	return false
}

type PublishActivityRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId string `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"` // 唯一id，
}

func (x *PublishActivityRsp) Reset() {
	*x = PublishActivityRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishActivityRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishActivityRsp) ProtoMessage() {}

func (x *PublishActivityRsp) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishActivityRsp.ProtoReflect.Descriptor instead.
func (*PublishActivityRsp) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{7}
}

func (x *PublishActivityRsp) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

type GetPersonActivityListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId string `protobuf:"bytes,1,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"` //唯一标识
}

func (x *GetPersonActivityListReq) Reset() {
	*x = GetPersonActivityListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonActivityListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonActivityListReq) ProtoMessage() {}

func (x *GetPersonActivityListReq) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonActivityListReq.ProtoReflect.Descriptor instead.
func (*GetPersonActivityListReq) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetPersonActivityListReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

type GetPersonActivityListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*ActivityDetail `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *GetPersonActivityListRsp) Reset() {
	*x = GetPersonActivityListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonActivityListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonActivityListRsp) ProtoMessage() {}

func (x *GetPersonActivityListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonActivityListRsp.ProtoReflect.Descriptor instead.
func (*GetPersonActivityListRsp) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetPersonActivityListRsp) GetInfos() []*ActivityDetail {
	if x != nil {
		return x.Infos
	}
	return nil
}

type ReserveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId string         `protobuf:"bytes,1,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	Detail  *ReserveDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ReserveReq) Reset() {
	*x = ReserveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveReq) ProtoMessage() {}

func (x *ReserveReq) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveReq.ProtoReflect.Descriptor instead.
func (*ReserveReq) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{10}
}

func (x *ReserveReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *ReserveReq) GetDetail() *ReserveDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type RserveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"` // 年月日具体规则需要对齐
	BeginTime string `protobuf:"bytes,2,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime   string `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Number    string `protobuf:"bytes,4,opt,name=number,proto3" json:"number,omitempty"` //预约人数？
}

func (x *RserveInfo) Reset() {
	*x = RserveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RserveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RserveInfo) ProtoMessage() {}

func (x *RserveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RserveInfo.ProtoReflect.Descriptor instead.
func (*RserveInfo) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{11}
}

func (x *RserveInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *RserveInfo) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *RserveInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *RserveInfo) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type ReserveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`          // 预约ID，唯一，根据此id可以查对应用户的预约单
	Number int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"` // 预约号？
	Status int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 预约状态（0-未知、1-预约成功、2-预约失败、3-预约进入排队、4-已取消）
}

func (x *ReserveRsp) Reset() {
	*x = ReserveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveRsp) ProtoMessage() {}

func (x *ReserveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveRsp.ProtoReflect.Descriptor instead.
func (*ReserveRsp) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{12}
}

func (x *ReserveRsp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReserveRsp) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ReserveRsp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetPersonReserveListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId    string `protobuf:"bytes,1,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`          // 用户
	UserType   int32  `protobuf:"varint,2,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`      // 用户类型（0-未知、1-预约者，2-发布者），默认展示预约人的
	ActivityId string `protobuf:"bytes,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"` // 默认为空，不进行过滤
	Page       int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`                              // 页数，从1开始，默认为1
	Size       int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                              // 大小，默认为10，不填默认为10
}

func (x *GetPersonReserveListReq) Reset() {
	*x = GetPersonReserveListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonReserveListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonReserveListReq) ProtoMessage() {}

func (x *GetPersonReserveListReq) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonReserveListReq.ProtoReflect.Descriptor instead.
func (*GetPersonReserveListReq) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetPersonReserveListReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *GetPersonReserveListReq) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *GetPersonReserveListReq) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *GetPersonReserveListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPersonReserveListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReserveDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId string        `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"` // 唯一id，
	Info       []*RserveInfo `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty"`                               // 预约信息，可以一次预约多个
	ExtraInfo  *ExtraInfo    `protobuf:"bytes,3,opt,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"`    // 每次预约单只有一个预约人
	Timestamp  int64         `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                    // 发起预约的时间戳
	Status     int32         `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                          // 预约状态（0-未知、1-预约成功、2-预约失败、3-预约进入排队）
}

func (x *ReserveDetail) Reset() {
	*x = ReserveDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveDetail) ProtoMessage() {}

func (x *ReserveDetail) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveDetail.ProtoReflect.Descriptor instead.
func (*ReserveDetail) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{14}
}

func (x *ReserveDetail) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ReserveDetail) GetInfo() []*RserveInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReserveDetail) GetExtraInfo() *ExtraInfo {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

func (x *ReserveDetail) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ReserveDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetPersonReserveListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []*ReserveDetail `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total    int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	IsFinish bool             `protobuf:"varint,3,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"` //  是否结束
}

func (x *GetPersonReserveListRsp) Reset() {
	*x = GetPersonReserveListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonReserveListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonReserveListRsp) ProtoMessage() {}

func (x *GetPersonReserveListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonReserveListRsp.ProtoReflect.Descriptor instead.
func (*GetPersonReserveListRsp) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetPersonReserveListRsp) GetData() []*ReserveDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetPersonReserveListRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetPersonReserveListRsp) GetIsFinish() bool {
	if x != nil {
		return x.IsFinish
	}
	return false
}

type GetPersonReserveDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId   string `protobuf:"bytes,1,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`       // 用户
	ReserveId string `protobuf:"bytes,2,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"` // 预约ID
}

func (x *GetPersonReserveDetailReq) Reset() {
	*x = GetPersonReserveDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonReserveDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonReserveDetailReq) ProtoMessage() {}

func (x *GetPersonReserveDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonReserveDetailReq.ProtoReflect.Descriptor instead.
func (*GetPersonReserveDetailReq) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetPersonReserveDetailReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *GetPersonReserveDetailReq) GetReserveId() string {
	if x != nil {
		return x.ReserveId
	}
	return ""
}

type GetPersonReserveDetailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *ReserveDetail `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"` // 详情
}

func (x *GetPersonReserveDetailRsp) Reset() {
	*x = GetPersonReserveDetailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonReserveDetailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonReserveDetailRsp) ProtoMessage() {}

func (x *GetPersonReserveDetailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonReserveDetailRsp.ProtoReflect.Descriptor instead.
func (*GetPersonReserveDetailRsp) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetPersonReserveDetailRsp) GetDetail() *ReserveDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type ActivityExposureReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId string `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"` // 事件序列化
	UnionId    string `protobuf:"bytes,2,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`          // 来过活动的人
}

func (x *ActivityExposureReportReq) Reset() {
	*x = ActivityExposureReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityExposureReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityExposureReportReq) ProtoMessage() {}

func (x *ActivityExposureReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityExposureReportReq.ProtoReflect.Descriptor instead.
func (*ActivityExposureReportReq) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{18}
}

func (x *ActivityExposureReportReq) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ActivityExposureReportReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

type ActivityExposureReportRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivityExposureReportRsp) Reset() {
	*x = ActivityExposureReportRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityExposureReportRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityExposureReportRsp) ProtoMessage() {}

func (x *ActivityExposureReportRsp) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityExposureReportRsp.ProtoReflect.Descriptor instead.
func (*ActivityExposureReportRsp) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{19}
}

type GetPersonActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId    string `protobuf:"bytes,1,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`          //唯一标识
	ActivityId string `protobuf:"bytes,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"` //唯一标识
}

func (x *GetPersonActivityReq) Reset() {
	*x = GetPersonActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonActivityReq) ProtoMessage() {}

func (x *GetPersonActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonActivityReq.ProtoReflect.Descriptor instead.
func (*GetPersonActivityReq) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetPersonActivityReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *GetPersonActivityReq) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

type ActivityDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos         *AppointmentInfo `protobuf:"bytes,1,opt,name=infos,proto3" json:"infos,omitempty"`
	ReserveNumber int32            `protobuf:"varint,2,opt,name=reserve_number,json=reserveNumber,proto3" json:"reserve_number,omitempty"` // 预约人数（预约单的数量，不管取消）
	WatchNumber   int32            `protobuf:"varint,3,opt,name=watch_number,json=watchNumber,proto3" json:"watch_number,omitempty"`       // 来过人数（这个正常需要上报接口）
	Timestamp     string           `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                               //
	UserType      int32            `protobuf:"varint,5,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`                // 当前查询的用户类型，0-未知、1-预约者、2-发布者
	ActivityId    string           `protobuf:"bytes,6,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`           // 当前活动ID
}

func (x *ActivityDetail) Reset() {
	*x = ActivityDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDetail) ProtoMessage() {}

func (x *ActivityDetail) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDetail.ProtoReflect.Descriptor instead.
func (*ActivityDetail) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{21}
}

func (x *ActivityDetail) GetInfos() *AppointmentInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ActivityDetail) GetReserveNumber() int32 {
	if x != nil {
		return x.ReserveNumber
	}
	return 0
}

func (x *ActivityDetail) GetWatchNumber() int32 {
	if x != nil {
		return x.WatchNumber
	}
	return 0
}

func (x *ActivityDetail) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ActivityDetail) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *ActivityDetail) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

type GetPersonActivityRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ActivityDetail `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetPersonActivityRsp) Reset() {
	*x = GetPersonActivityRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_appointment_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonActivityRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonActivityRsp) ProtoMessage() {}

func (x *GetPersonActivityRsp) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_appointment_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonActivityRsp.ProtoReflect.Descriptor instead.
func (*GetPersonActivityRsp) Descriptor() ([]byte, []int) {
	return file_appointment_service_appointment_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetPersonActivityRsp) GetInfo() *ActivityDetail {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_appointment_service_appointment_service_proto protoreflect.FileDescriptor

var file_appointment_service_appointment_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb7, 0x02, 0x0a, 0x0f, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a,
	0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x52, 0x0a, 0x0d, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x62, 0x0a, 0x0a, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x5b, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x13,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x64, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x6d, 0x75, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x4d, 0x75, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x63, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22,
	0x72, 0x0a, 0x0a, 0x52, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x9a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xda,
	0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x22, 0x55, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x22, 0x57, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x78,
	0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x22, 0x52, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a,
	0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x3a, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x4f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x32, 0x90, 0x06, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x0f, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x73, 0x70, 0x12, 0x75,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x73, 0x70, 0x12, 0x72, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x78, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x2e, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x78, 0x0a, 0x16, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x73, 0x70, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x6e, 0x66, 0x65, 0x6e, 0x67, 0x68, 0x75, 0x61, 0x2f,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x75, 0x62, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_appointment_service_appointment_service_proto_rawDescOnce sync.Once
	file_appointment_service_appointment_service_proto_rawDescData = file_appointment_service_appointment_service_proto_rawDesc
)

func file_appointment_service_appointment_service_proto_rawDescGZIP() []byte {
	file_appointment_service_appointment_service_proto_rawDescOnce.Do(func() {
		file_appointment_service_appointment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_appointment_service_appointment_service_proto_rawDescData)
	})
	return file_appointment_service_appointment_service_proto_rawDescData
}

var file_appointment_service_appointment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_appointment_service_appointment_service_proto_goTypes = []interface{}{
	(*PublishActivityReq)(nil),        // 0: appointment_service.PublishActivityReq
	(*AppointmentInfo)(nil),           // 1: appointment_service.AppointmentInfo
	(*AppointmentProject)(nil),        // 2: appointment_service.AppointmentProject
	(*AppointmentIntroduction)(nil),   // 3: appointment_service.AppointmentIntroduction
	(*AppointmentTimeSlot)(nil),       // 4: appointment_service.AppointmentTimeSlot
	(*TimeSlot)(nil),                  // 5: appointment_service.TimeSlot
	(*ExtraInfo)(nil),                 // 6: appointment_service.ExtraInfo
	(*PublishActivityRsp)(nil),        // 7: appointment_service.PublishActivityRsp
	(*GetPersonActivityListReq)(nil),  // 8: appointment_service.GetPersonActivityListReq
	(*GetPersonActivityListRsp)(nil),  // 9: appointment_service.GetPersonActivityListRsp
	(*ReserveReq)(nil),                // 10: appointment_service.ReserveReq
	(*RserveInfo)(nil),                // 11: appointment_service.RserveInfo
	(*ReserveRsp)(nil),                // 12: appointment_service.ReserveRsp
	(*GetPersonReserveListReq)(nil),   // 13: appointment_service.GetPersonReserveListReq
	(*ReserveDetail)(nil),             // 14: appointment_service.ReserveDetail
	(*GetPersonReserveListRsp)(nil),   // 15: appointment_service.GetPersonReserveListRsp
	(*GetPersonReserveDetailReq)(nil), // 16: appointment_service.GetPersonReserveDetailReq
	(*GetPersonReserveDetailRsp)(nil), // 17: appointment_service.GetPersonReserveDetailRsp
	(*ActivityExposureReportReq)(nil), // 18: appointment_service.ActivityExposureReportReq
	(*ActivityExposureReportRsp)(nil), // 19: appointment_service.ActivityExposureReportRsp
	(*GetPersonActivityReq)(nil),      // 20: appointment_service.GetPersonActivityReq
	(*ActivityDetail)(nil),            // 21: appointment_service.ActivityDetail
	(*GetPersonActivityRsp)(nil),      // 22: appointment_service.GetPersonActivityRsp
	nil,                               // 23: appointment_service.AppointmentProject.InfosEntry
}
var file_appointment_service_appointment_service_proto_depIdxs = []int32{
	1,  // 0: appointment_service.PublishActivityReq.info:type_name -> appointment_service.AppointmentInfo
	6,  // 1: appointment_service.AppointmentInfo.extra_info:type_name -> appointment_service.ExtraInfo
	3,  // 2: appointment_service.AppointmentInfo.introductions:type_name -> appointment_service.AppointmentIntroduction
	2,  // 3: appointment_service.AppointmentInfo.projects:type_name -> appointment_service.AppointmentProject
	23, // 4: appointment_service.AppointmentProject.infos:type_name -> appointment_service.AppointmentProject.InfosEntry
	5,  // 5: appointment_service.AppointmentTimeSlot.times:type_name -> appointment_service.TimeSlot
	21, // 6: appointment_service.GetPersonActivityListRsp.infos:type_name -> appointment_service.ActivityDetail
	14, // 7: appointment_service.ReserveReq.detail:type_name -> appointment_service.ReserveDetail
	11, // 8: appointment_service.ReserveDetail.info:type_name -> appointment_service.RserveInfo
	6,  // 9: appointment_service.ReserveDetail.extra_info:type_name -> appointment_service.ExtraInfo
	14, // 10: appointment_service.GetPersonReserveListRsp.data:type_name -> appointment_service.ReserveDetail
	14, // 11: appointment_service.GetPersonReserveDetailRsp.detail:type_name -> appointment_service.ReserveDetail
	1,  // 12: appointment_service.ActivityDetail.infos:type_name -> appointment_service.AppointmentInfo
	21, // 13: appointment_service.GetPersonActivityRsp.info:type_name -> appointment_service.ActivityDetail
	4,  // 14: appointment_service.AppointmentProject.InfosEntry.value:type_name -> appointment_service.AppointmentTimeSlot
	0,  // 15: appointment_service.AppointmentService.PublishActivity:input_type -> appointment_service.PublishActivityReq
	8,  // 16: appointment_service.AppointmentService.GetPersonActivityList:input_type -> appointment_service.GetPersonActivityListReq
	20, // 17: appointment_service.AppointmentService.GetPersonActivity:input_type -> appointment_service.GetPersonActivityReq
	10, // 18: appointment_service.AppointmentService.Reserve:input_type -> appointment_service.ReserveReq
	13, // 19: appointment_service.AppointmentService.GetPersonReserveList:input_type -> appointment_service.GetPersonReserveListReq
	16, // 20: appointment_service.AppointmentService.GetPersonReserveDetail:input_type -> appointment_service.GetPersonReserveDetailReq
	18, // 21: appointment_service.AppointmentService.ActivityExposureReport:input_type -> appointment_service.ActivityExposureReportReq
	7,  // 22: appointment_service.AppointmentService.PublishActivity:output_type -> appointment_service.PublishActivityRsp
	9,  // 23: appointment_service.AppointmentService.GetPersonActivityList:output_type -> appointment_service.GetPersonActivityListRsp
	22, // 24: appointment_service.AppointmentService.GetPersonActivity:output_type -> appointment_service.GetPersonActivityRsp
	12, // 25: appointment_service.AppointmentService.Reserve:output_type -> appointment_service.ReserveRsp
	15, // 26: appointment_service.AppointmentService.GetPersonReserveList:output_type -> appointment_service.GetPersonReserveListRsp
	17, // 27: appointment_service.AppointmentService.GetPersonReserveDetail:output_type -> appointment_service.GetPersonReserveDetailRsp
	19, // 28: appointment_service.AppointmentService.ActivityExposureReport:output_type -> appointment_service.ActivityExposureReportRsp
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_appointment_service_appointment_service_proto_init() }
func file_appointment_service_appointment_service_proto_init() {
	if File_appointment_service_appointment_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_appointment_service_appointment_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentIntroduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentTimeSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishActivityRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonActivityListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonActivityListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RserveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonReserveListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonReserveListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonReserveDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonReserveDetailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityExposureReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityExposureReportRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_appointment_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonActivityRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_appointment_service_appointment_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_appointment_service_appointment_service_proto_goTypes,
		DependencyIndexes: file_appointment_service_appointment_service_proto_depIdxs,
		MessageInfos:      file_appointment_service_appointment_service_proto_msgTypes,
	}.Build()
	File_appointment_service_appointment_service_proto = out.File
	file_appointment_service_appointment_service_proto_rawDesc = nil
	file_appointment_service_appointment_service_proto_goTypes = nil
	file_appointment_service_appointment_service_proto_depIdxs = nil
}
